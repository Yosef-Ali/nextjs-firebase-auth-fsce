rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdminUser() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Media collection rules - simplified for basic operations
    match /media/{mediaId} {
      allow read: if true;  // Allow all reads
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        resource.data.uploadedBy == request.auth.uid || isAdminUser()
      );
      // No complex queries that require indexes
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && isAuthorOrAdmin();
      allow update, delete: if request.auth != null && (isAdmin() || (isAuthorOfPost() && isAuthorOrAdmin()));
    }
  }
}
